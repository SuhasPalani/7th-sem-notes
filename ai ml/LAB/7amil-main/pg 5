import numpy as np
X=np.array(([2,9],[1,5],[3,6]),dtype=float)
y=np.array(([92],[86],[89]), dtype=float)
X=X/np.amax(X,axis=0)
y=y/100

def sigmoid(x):
  return 1/(1+np.exp(-x))

def der_sigmoid(x):
  return x*(1-x)

ip_neu=2
hd_neu=3
op_neu=1
lr=0.1

wh=np.random.uniform(size=(ip_neu,hd_neu))
bh=np.random.uniform(size=(1,hd_neu))
wout=np.random.uniform(size=(hd_neu,op_neu))
bout=np.random.uniform(size=(1,op_neu))

for i in range(7000):
  hinp1=np.dot(X,wh)
  hinp=hinp1+bh
  hlay_act=sigmoid(hinp)
  outinp1=np.dot(hlay_act,wout)
  outinp=outinp1+bout
  output=sigmoid(outinp)

  EO=y-output
  outgrad=der_sigmoid(output)
  d_output=EO*outgrad
  EH=d_output.dot(wout.T)
  hiddengrad=der_sigmoid(hlay_act)
  d_hiddenlay=EH*hiddengrad
  wout+=hlay_act.T.dot(d_output)*lr
  wh+=X.T.dot(d_hiddenlay)*lr

print("Input :\n", str(X))
print("Actual Output :\n", str(y))
print("Predicted Output :\n", output)
